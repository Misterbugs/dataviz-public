{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-140: Bypassing of Intermediate Forms in Multiple-Form Sets</b><br>Some web applications require users to submit information through an ordered<br>sequence of web forms. This is often done if there is a very large amount of<br>information being collected or if information on earlier forms is used to<br>pre-populate fields or determine which additional information the application<br>needs to collect. An attacker who knows the names of the various forms in the<br>sequence may be able to explicitly type in the name of a later form and navigate<br>to it without first going through the previous forms. This can result in<br>incomplete collection of information, incorrect assumptions about the<br>information submitted by the attacker, or other problems that can impair the<br>functioning of the application.",
      "color": "#75aaff",
      "size": 18,
      "label": "Bypassing of Intermediate Forms in Multiple-Form Sets",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/140.html",
      "id": "140"
    },
    {
      "Description": "<b>CAPEC-663: Exploitation of Transient Instruction Execution</b><br>An adversary exploits a hardware design flaw in a CPU implementation of<br>transient instruction execution to expose sensitive data and bypass/subvert<br>access control over restricted resources. Typically, the adversary conducts a<br>covert channel attack to target non-discarded microarchitectural changes caused<br>by transient executions such as speculative execution, branch prediction,<br>instruction pipelining, and/or out-of-order execution. The transient execution<br>results in a series of instructions (gadgets) which construct covert channel and<br>access/transfer the secret data.",
      "color": "#75aaff",
      "size": 18,
      "label": "Exploitation of Transient Instruction Execution",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/663.html",
      "id": "663"
    },
    {
      "Description": "<b>CAPEC-74: Manipulating State</b><br>The adversary modifies state information maintained by the target software or<br>causes a state transition in hardware. If successful, the target will use this<br>tainted state and execute in an unintended manner. State management is an<br>important function within a software application. User state maintained by the<br>application can include usernames, payment information, browsing history as well<br>as application-specific contents such as items in a shopping cart. Manipulating<br>user state can be employed by an adversary to elevate privilege, conduct<br>fraudulent transactions or otherwise modify the flow of the application to<br>derive certain benefits. If there is a hardware logic error in a finite state<br>machine, the adversary can use this to put the system in an undefined state<br>which could cause a denial of service or exposure of secure data.",
      "color": "#2176ff",
      "size": 30,
      "label": "Manipulating State",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/74.html",
      "id": "74"
    },
    {
      "Description": "<b>CAPEC-696: Load Value Injection</b><br>An adversary exploits a hardware design flaw in a CPU implementation of<br>transient instruction execution in which a faulting or assisted load instruction<br>transiently forwards adversary-controlled data from microarchitectural buffers.<br>By inducing a page fault or microcode assist during victim execution, an<br>adversary can force legitimate victim execution to operate on the<br>adversary-controlled data which is stored in the microarchitectural buffers. The<br>adversary can then use existing code gadgets and side channel analysis to<br>discover victim secrets that have not yet been flushed from microarchitectural<br>state or hijack the system control flow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Load Value Injection",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/696.html",
      "id": "696"
    }
  ],
  "links": [
    {
      "source": "140",
      "target": "74"
    },
    {
      "source": "663",
      "target": "74"
    },
    {
      "source": "696",
      "target": "663"
    }
  ]
}
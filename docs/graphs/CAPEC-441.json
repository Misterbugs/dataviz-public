{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-441: Malicious Logic Insertion</b><br>An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.",
      "color": "#2176ff",
      "size": 30,
      "label": "Malicious Logic Insertion",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/441.html",
      "id": "441"
    },
    {
      "Description": "<b>CAPEC-442: Infected Software</b><br>An adversary adds malicious logic, often in the form of a computer virus, to otherwise benign software. This logic is often hidden from the user of the software and works behind the scenes to achieve negative impacts. Many times, the malicious logic is inserted into empty space between legitimate code, and is then called when the software is executed. This pattern of attack focuses on software already fielded and used in operation as opposed to software that is still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Software",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/442.html",
      "id": "442"
    },
    {
      "Description": "<b>CAPEC-457: USB Memory Attacks</b><br>An adversary loads malicious code onto a USB memory stick in order to infect any system which the device is plugged in to. USB drives present a significant security risk for business and government agencies. Given the ability to integrate wireless functionality into a USB stick, it is possible to design malware that not only steals confidential data, but sniffs the network, or monitor keystrokes, and then exfiltrates the stolen data off-site via a Wireless connection. Also, viruses can be transmitted via the USB interface without the specific use of a memory stick. The attacks from USB devices are often of such sophistication that experts conclude they are not the work of single individuals, but suggest state sponsorship. These attacks can be performed by an adversary with direct access to a target system or can be executed via means such as USB Drop Attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "USB Memory Attacks",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/457.html",
      "id": "457"
    },
    {
      "Description": "<b>CAPEC-458: Flash Memory Attacks</b><br>An adversary inserts malicious logic into a product or technology via flashing the on-board memory with a code-base that contains malicious logic. Various attacks exist against the integrity of flash memory, the most direct being rootkits coded into the BIOS or chipset of a device.",
      "color": "#94ebff",
      "size": 10,
      "label": "Flash Memory Attacks",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/458.html",
      "id": "458"
    },
    {
      "Description": "<b>CAPEC-638: Altered Component Firmware</b><br>An adversary exploits systems features and/or improperly protected firmware of hardware components, such as Hard Disk Drives (HDD), with the goal of executing malicious code from within the component's Master Boot Record (MBR). Conducting this type of attack entails the adversary infecting the target with firmware altering malware, using known tools, and a payload. Once this malware is executed, the MBR is modified to include instructions to execute the payload at desired intervals and when the system is booted up. A successful attack will obtain persistence within the victim system even if the operating system is reinstalled and/or if the component is formatted or has its data erased.",
      "color": "#94ebff",
      "size": 10,
      "label": "Altered Component Firmware",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/638.html",
      "id": "638"
    },
    {
      "Description": "<b>CAPEC-456: Infected Memory</b><br>An adversary inserts malicious logic into memory enabling them to achieve a negative impact. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems that are still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Memory",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/456.html",
      "id": "456"
    },
    {
      "Description": "<b>CAPEC-452: Infected Hardware</b><br>An adversary inserts malicious logic into hardware, typically in the form of a computer virus or rootkit. This logic is often hidden from the user of the hardware and works behind the scenes to achieve negative impacts. This pattern of attack focuses on hardware already fielded and used in operation as opposed to hardware that is still under development and part of the supply chain.",
      "color": "#75aaff",
      "size": 18,
      "label": "Infected Hardware",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/452.html",
      "id": "452"
    },
    {
      "Description": "<b>CAPEC-448: Embed Virus into DLL</b><br>An adversary tampers with a DLL and embeds a computer virus into gaps between legitimate machine instructions. These gaps may be the result of compiler optimizations that pad memory blocks for performance gains. The embedded virus then attempts to infect any machine which interfaces with the product, and possibly steal private data or eavesdrop.",
      "color": "#94ebff",
      "size": 10,
      "label": "Embed Virus into DLL",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/448.html",
      "id": "448"
    }
  ],
  "links": [
    {
      "source": "442",
      "target": "441"
    },
    {
      "source": "457",
      "target": "456"
    },
    {
      "source": "458",
      "target": "456"
    },
    {
      "source": "638",
      "target": "452"
    },
    {
      "source": "456",
      "target": "441"
    },
    {
      "source": "452",
      "target": "441"
    },
    {
      "source": "448",
      "target": "442"
    }
  ]
}
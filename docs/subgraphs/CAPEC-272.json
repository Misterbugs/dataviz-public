{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-278: Web Services Protocol Manipulation</b><br>An adversary manipulates a web service related protocol to cause a web<br>application or service to react differently than intended. This can either be<br>performed through the manipulation of call parameters to include unexpected<br>values, or by changing the called function to one that should normally be<br>restricted or limited. By leveraging this pattern of attack, the adversary is<br>able to gain access to data or resources normally restricted, or to cause the<br>application or service to crash.",
      "color": "#75aaff",
      "size": 18,
      "label": "Web Services Protocol Manipulation",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/278.html",
      "id": "278"
    },
    {
      "Description": "<b>CAPEC-5: Blue Boxing</b><br>This type of attack against older telephone switches and trunks has been around<br>for decades. A tone is sent by an adversary to impersonate a supervisor signal<br>which has the effect of rerouting or usurping command of the line. While the US<br>infrastructure proper may not contain widespread vulnerabilities to this type of<br>attack, many companies are connected globally through call centers and business<br>process outsourcing. These international systems may be operated in countries<br>which have not upgraded Telco infrastructure and so are vulnerable to Blue<br>boxing. Blue boxing is a result of failure on the part of the system to enforce<br>strong authorization for administrative functions. While the infrastructure is<br>different than standard current applications like web applications, there are<br>historical lessons to be learned to upgrade the access control for<br>administrative functions. This attack pattern is included in CAPEC for<br>historical purposes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Blue Boxing",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/5.html",
      "id": "5"
    },
    {
      "Description": "<b>CAPEC-273: HTTP Response Smuggling</b><br>An adversary manipulates and injects malicious content in the form of secret<br>unauthorized HTTP responses, into a single HTTP response from a vulnerable or<br>compromised back-end HTTP agent (e.g., server). See CanPrecede relationships for<br>possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Response Smuggling",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/273.html",
      "id": "273"
    },
    {
      "Description": "<b>CAPEC-90: Reflection Attack in Authentication Protocol</b><br>An adversary can abuse an authentication protocol susceptible to reflection<br>attack in order to defeat it. Doing so allows the adversary illegitimate access<br>to the target system, without possessing the requisite credentials. Reflection<br>attacks are of great concern to authentication protocols that rely on a<br>challenge-handshake or similar mechanism. An adversary can impersonate a<br>legitimate user and can gain illegitimate access to the system by successfully<br>mounting a reflection attack during authentication.",
      "color": "#75aaff",
      "size": 18,
      "label": "Reflection Attack in Authentication Protocol",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/90.html",
      "id": "90"
    },
    {
      "Description": "<b>CAPEC-201: Serialized Data External Linking</b><br>An adversary creates a serialized data file (e.g. XML, YAML, etc...) that<br>contains an external data reference. Because serialized data parsers may not<br>validate documents with external references, there may be no checks on the<br>nature of the reference in the external data. This can allow an adversary to<br>open arbitrary files or connections, which may further lead to the adversary<br>gaining access to information on the system that they would normally be unable<br>to obtain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Serialized Data External Linking",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/201.html",
      "id": "201"
    },
    {
      "Description": "<b>CAPEC-34: HTTP Response Splitting</b><br>An adversary manipulates and injects malicious content, in the form of secret<br>unauthorized HTTP responses, into a single HTTP response from a vulnerable or<br>compromised back-end HTTP agent (e.g., web server) or into an already spoofed<br>HTTP response from an adversary controlled domain/site. See CanPrecede<br>relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Response Splitting",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/34.html",
      "id": "34"
    },
    {
      "Description": "<b>CAPEC-279: SOAP Manipulation</b><br>Simple Object Access Protocol (SOAP) is used as a communication protocol between<br>a client and server to invoke web services on the server. It is an XML-based<br>protocol, and therefore suffers from many of the same shortcomings as other<br>XML-based protocols. Adversaries can make use of these shortcomings and<br>manipulate the content of SOAP paramters, leading to undesirable behavior on the<br>server and allowing the adversary to carry out a number of further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "SOAP Manipulation",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/279.html",
      "id": "279"
    },
    {
      "Description": "<b>CAPEC-272: Protocol Manipulation</b><br>An adversary subverts a communications protocol to perform an attack. This type<br>of attack can allow an adversary to impersonate others, discover sensitive<br>information, control the outcome of a session, or perform other attacks. This<br>type of attack targets invalid assumptions that may be inherent in implementers<br>of the protocol, incorrect implementations of the protocol, or vulnerabilities<br>in the protocol itself.",
      "color": "#2176ff",
      "size": 30,
      "label": "Protocol Manipulation",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/272.html",
      "id": "272"
    },
    {
      "Description": "<b>CAPEC-220: Client-Server Protocol Manipulation</b><br>An adversary takes advantage of weaknesses in the protocol by which a client and<br>server are communicating to perform unexpected actions. Communication protocols<br>are necessary to transfer messages between client and server applications.<br>Moreover, different protocols may be used for different types of interactions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Client-Server Protocol Manipulation",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/220.html",
      "id": "220"
    },
    {
      "Description": "<b>CAPEC-221: Data Serialization External Entities Blowup</b><br>This attack takes advantage of the entity replacement property of certain data<br>serialization languages (e.g., XML, YAML, etc.) where the value of the<br>replacement is a URI. A well-crafted file could have the entity refer to a URI<br>that consumes a large amount of resources to create a denial of service<br>condition. This can cause the system to either freeze, crash, or execute<br>arbitrary code depending on the URI.",
      "color": "#94ebff",
      "size": 10,
      "label": "Data Serialization External Entities Blowup",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/221.html",
      "id": "221"
    },
    {
      "Description": "<b>CAPEC-276: Inter-component Protocol Manipulation</b><br>Inter-component protocols are used to communicate between different software and<br>hardware modules within a single computer. Common examples are: interrupt<br>signals and data pipes. Subverting the protocol can allow an adversary to<br>impersonate others, discover sensitive information, control the outcome of a<br>session, or perform other attacks. This type of attack targets invalid<br>assumptions that may be inherent in implementers of the protocol, incorrect<br>implementations of the protocol, or vulnerabilities in the protocol itself.",
      "color": "#75aaff",
      "size": 18,
      "label": "Inter-component Protocol Manipulation",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/276.html",
      "id": "276"
    },
    {
      "Description": "<b>CAPEC-105: HTTP Request Splitting</b><br>An adversary abuses the flexibility and discrepancies in the parsing and<br>interpretation of HTTP Request messages by different intermediary HTTP agents<br>(e.g., load balancer, reverse proxy, web caching proxies, application firewalls,<br>etc.) to split a single HTTP request into multiple unauthorized and malicious<br>HTTP requests to a back-end HTTP agent (e.g., web server). See CanPrecede<br>relationships for possible consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Request Splitting",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/105.html",
      "id": "105"
    },
    {
      "Description": "<b>CAPEC-33: HTTP Request Smuggling</b><br>An adversary abuses the flexibility and discrepancies in the parsing and<br>interpretation of HTTP Request messages using various HTTP headers, request-line<br>and body parameters as well as message sizes (denoted by the end of message<br>signaled by a given HTTP header) by different intermediary HTTP agents (e.g.,<br>load balancer, reverse proxy, web caching proxies, application firewalls, etc.)<br>to secretly send unauthorized and malicious HTTP requests to a back-end HTTP<br>agent (e.g., web server). See CanPrecede relationships for possible<br>consequences.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Request Smuggling",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/33.html",
      "id": "33"
    },
    {
      "Description": "<b>CAPEC-274: HTTP Verb Tampering</b><br>An attacker modifies the HTTP Verb (e.g. GET, PUT, TRACE, etc.) in order to<br>bypass access restrictions. Some web environments allow administrators to<br>restrict access based on the HTTP Verb used with requests. However, attackers<br>can often provide a different HTTP Verb, or even provide a random string as a<br>verb in order to bypass these protections. This allows the attacker to access<br>data that should otherwise be protected.",
      "color": "#94ebff",
      "size": 10,
      "label": "HTTP Verb Tampering",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/274.html",
      "id": "274"
    },
    {
      "Description": "<b>CAPEC-665: Exploitation of Thunderbolt Protection Flaws</b><br>An adversary leverages a firmware weakness within the Thunderbolt protocol, on a<br>computing device to manipulate Thunderbolt controller firmware in order to<br>exploit vulnerabilities in the implementation of authorization and verification<br>schemes within Thunderbolt protection mechanisms. Upon gaining physical access<br>to a target device, the adversary conducts high-level firmware manipulation of<br>the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash,<br>through the use of a SPI Programing device and an external Thunderbolt device,<br>typically as the target device is booting up. If successful, this allows the<br>adversary to modify memory, subvert authentication mechanisms, spoof identities<br>and content, and extract data and memory from the target device. Currently 7<br>major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as<br>noted in the Execution Flow.",
      "color": "#94ebff",
      "size": 10,
      "label": "Exploitation of Thunderbolt Protection Flaws",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/665.html",
      "id": "665"
    },
    {
      "Description": "<b>CAPEC-277: Data Interchange Protocol Manipulation</b><br>Data Interchange Protocols are used to transmit structured data between<br>entities. These protocols are often specific to a particular domain (B2B:<br>purchase orders, invoices, transport logistics and waybills, medical records).<br>They are often, but not always, XML-based. Subverting the protocol can allow an<br>adversary to impersonate others, discover sensitive information, control the<br>outcome of a session, or perform other attacks. This type of attack targets<br>invalid assumptions that may be inherent in implementers of the protocol,<br>incorrect implementations of the protocol, or vulnerabilities in the protocol<br>itself.",
      "color": "#75aaff",
      "size": 18,
      "label": "Data Interchange Protocol Manipulation",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/277.html",
      "id": "277"
    }
  ],
  "links": [
    {
      "source": "278",
      "target": "272"
    },
    {
      "source": "5",
      "target": "220"
    },
    {
      "source": "273",
      "target": "220"
    },
    {
      "source": "90",
      "target": "272"
    },
    {
      "source": "201",
      "target": "278"
    },
    {
      "source": "34",
      "target": "220"
    },
    {
      "source": "279",
      "target": "278"
    },
    {
      "source": "220",
      "target": "272"
    },
    {
      "source": "221",
      "target": "278"
    },
    {
      "source": "276",
      "target": "272"
    },
    {
      "source": "105",
      "target": "220"
    },
    {
      "source": "33",
      "target": "220"
    },
    {
      "source": "274",
      "target": "220"
    },
    {
      "source": "665",
      "target": "276"
    },
    {
      "source": "277",
      "target": "272"
    }
  ]
}
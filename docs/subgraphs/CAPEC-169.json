{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-573: Process Footprinting</b><br>An adversary exploits functionality meant to identify information about the<br>currently running processes on the target system to an authorized user. By<br>knowing what processes are running on the target system, the adversary can learn<br>about the target environment as a means towards further malicious behavior.",
      "color": "#75aaff",
      "size": 18,
      "label": "Process Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/573.html",
      "id": "573"
    },
    {
      "Description": "<b>CAPEC-299: TCP SYN Ping</b><br>An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC<br>793 behavior specifies that when a TCP port is open, a host must respond to an<br>incoming SYN \"synchronize\" packet by completing stage two of the 'three-way<br>handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793<br>behavior is to respond with a RST \"reset\" packet. This behavior can be used to<br>'ping' a target to see if it is alive by sending a TCP SYN packet to a port and<br>then looking for a RST or an ACK packet in response.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP SYN Ping",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/299.html",
      "id": "299"
    },
    {
      "Description": "<b>CAPEC-306: TCP Window Scan</b><br>An adversary engages in TCP Window scanning to analyze port status and operating<br>system type. TCP Window scanning uses the ACK scanning method but examine the<br>TCP Window Size field of response RST packets to make certain inferences. While<br>TCP Window Scans are fast and relatively stealthy, they work against fewer TCP<br>stack implementations than any other type of scan. Some operating systems return<br>a positive TCP window size when a RST packet is sent from an open port, and a<br>negative value when the RST originates from a closed port. TCP Window scanning<br>is one of the most complex scan types, and its results are difficult to<br>interpret. Window scanning alone rarely yields useful information, but when<br>combined with other types of scanning is more useful. It is a generally more<br>reliable means of making inference about operating system versions than port<br>status.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Window Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/306.html",
      "id": "306"
    },
    {
      "Description": "<b>CAPEC-643: Identify Shared Files/Directories on System</b><br>An adversary discovers connections between systems by exploiting the target<br>system's standard practice of revealing them in searchable, common areas.<br>Through the identification of shared folders/drives between systems, the<br>adversary may further their goals of locating and collecting sensitive<br>information/files, or map potential routes for lateral movement within the<br>network.",
      "color": "#94ebff",
      "size": 10,
      "label": "Identify Shared Files/Directories on System",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/643.html",
      "id": "643"
    },
    {
      "Description": "<b>CAPEC-303: TCP Xmas Scan</b><br>An adversary uses a TCP XMAS scan to determine if ports are closed on the target<br>machine. This scan type is accomplished by sending TCP segments with all<br>possible flags set in the packet header, generating packets that are illegal<br>based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an<br>out-of-state Flag sent to an open port is discarded, whereas segments with<br>out-of-state flags sent to closed ports should be handled with a RST in<br>response. This behavior should allow an attacker to scan for closed ports by<br>sending certain types of rule-breaking packets (out of sync or disallowed by the<br>TCB) and detect closed ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Xmas Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/303.html",
      "id": "303"
    },
    {
      "Description": "<b>CAPEC-302: TCP FIN Scan</b><br>An adversary uses a TCP FIN scan to determine if ports are closed on the target<br>machine. This scan type is accomplished by sending TCP segments with the FIN bit<br>set in the packet header. The RFC 793 expected behavior is that any TCP segment<br>with an out-of-state Flag sent to an open port is discarded, whereas segments<br>with out-of-state flags sent to closed ports should be handled with a RST in<br>response. This behavior should allow the adversary to scan for closed ports by<br>sending certain types of rule-breaking packets (out of sync or disallowed by the<br>TCB) and detect closed ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP FIN Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/302.html",
      "id": "302"
    },
    {
      "Description": "<b>CAPEC-293: Traceroute Route Enumeration</b><br>An adversary uses a traceroute utility to map out the route which data flows<br>through the network in route to a target destination. Tracerouting can allow the<br>adversary to construct a working topology of systems and routers by listing the<br>systems through which data passes through on their way to the targeted machine.<br>This attack can return varied results depending upon the type of traceroute that<br>is performed. Traceroute works by sending packets to a target while incrementing<br>the Time-to-Live field in the packet header. As the packet traverses each hop<br>along its way to the destination, its TTL expires generating an ICMP diagnostic<br>message that identifies where the packet expired. Traditional techniques for<br>tracerouting involved the use of ICMP and UDP, but as more firewalls began to<br>filter ingress ICMP, methods of traceroute using TCP were developed.",
      "color": "#94ebff",
      "size": 10,
      "label": "Traceroute Route Enumeration",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/293.html",
      "id": "293"
    },
    {
      "Description": "<b>CAPEC-296: ICMP Information Request</b><br>An adversary sends an ICMP Information Request to a host to determine if it will<br>respond to this deprecated mechanism. ICMP Information Requests are a deprecated<br>message type. Information Requests were originally used for diskless machines to<br>automatically obtain their network configuration, but this message type has been<br>superseded by more robust protocol implementations like DHCP.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Information Request",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/296.html",
      "id": "296"
    },
    {
      "Description": "<b>CAPEC-308: UDP Scan</b><br>An adversary engages in UDP scanning to gather information about UDP port status<br>on the target system. UDP scanning methods involve sending a UDP datagram to the<br>target port and looking for evidence that the port is closed. Open UDP ports<br>usually do not respond to UDP datagrams as there is no stateful mechanism within<br>the protocol that requires building or establishing a session. Responses to UDP<br>datagrams are therefore application specific and cannot be relied upon as a<br>method of detecting an open port. UDP scanning relies heavily upon ICMP<br>diagnostic messages in order to determine the status of a remote port.",
      "color": "#94ebff",
      "size": 10,
      "label": "UDP Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/308.html",
      "id": "308"
    },
    {
      "Description": "<b>CAPEC-309: Network Topology Mapping</b><br>An adversary engages in scanning activities to map network nodes, hosts,<br>devices, and routes. Adversaries usually perform this type of network<br>reconnaissance during the early stages of attack against an external network.<br>Many types of scanning utilities are typically employed, including ICMP tools,<br>network mappers, port scanners, and route testing utilities such as traceroute.",
      "color": "#75aaff",
      "size": 18,
      "label": "Network Topology Mapping",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/309.html",
      "id": "309"
    },
    {
      "Description": "<b>CAPEC-295: Timestamp Request</b><br>This pattern of attack leverages standard requests to learn the exact time<br>associated with a target system. An adversary may be able to use the timestamp<br>returned from the target to attack time-based security algorithms, such as<br>random number generators, or time-based authentication mechanisms.",
      "color": "#94ebff",
      "size": 10,
      "label": "Timestamp Request",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/295.html",
      "id": "295"
    },
    {
      "Description": "<b>CAPEC-292: Host Discovery</b><br>An adversary sends a probe to an IP address to determine if the host is alive.<br>Host discovery is one of the earliest phases of network reconnaissance. The<br>adversary usually starts with a range of IP addresses belonging to a target<br>network and uses various methods to determine if a host is present at that IP<br>address. Host discovery is usually referred to as 'Ping' scanning using a sonar<br>analogy. The goal is to send a packet through to the IP address and solicit a<br>response from the host. As such, a 'ping' can be virtually any crafted packet<br>whatsoever, provided the adversary can identify a functional host based on its<br>response. An attack of this nature is usually carried out with a 'ping sweep,'<br>where a particular kind of ping is sent to a range of IP addresses.",
      "color": "#75aaff",
      "size": 18,
      "label": "Host Discovery",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/292.html",
      "id": "292"
    },
    {
      "Description": "<b>CAPEC-574: Services Footprinting</b><br>An adversary exploits functionality meant to identify information about the<br>services on the target system to an authorized user. By knowing what services<br>are registered on the target system, the adversary can learn about the target<br>environment as a means towards further malicious behavior. Depending on the<br>operating system, commands that can obtain services information include \"sc\" and<br>\"tasklist/svc\" using Tasklist, and \"net start\" using Net.",
      "color": "#75aaff",
      "size": 18,
      "label": "Services Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/574.html",
      "id": "574"
    },
    {
      "Description": "<b>CAPEC-613: WiFi SSID Tracking</b><br>In this attack scenario, the attacker passively listens for WiFi management<br>frame messages containing the Service Set Identifier (SSID) for the WiFi<br>network. These messages are frequently transmitted by WiFi access points (e.g.,<br>the retransmission device) as well as by clients that are accessing the network<br>(e.g., the handset/mobile device). Once the attacker is able to associate an<br>SSID with a particular user or set of users (for example, when attending a<br>public event), the attacker can then scan for this SSID to track that user in<br>the future.",
      "color": "#94ebff",
      "size": 10,
      "label": "WiFi SSID Tracking",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/613.html",
      "id": "613"
    },
    {
      "Description": "<b>CAPEC-287: TCP SYN Scan</b><br>An adversary uses a SYN scan to determine the status of ports on the remote<br>target. SYN scanning is the most common type of port scanning that is used<br>because of its many advantages and few drawbacks. As a result, novice attackers<br>tend to overly rely on the SYN scan while performing system reconnaissance. As a<br>scanning method, the primary advantages of SYN scanning are its universality and<br>speed.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP SYN Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/287.html",
      "id": "287"
    },
    {
      "Description": "<b>CAPEC-304: TCP Null Scan</b><br>An adversary uses a TCP NULL scan to determine if ports are closed on the target<br>machine. This scan type is accomplished by sending TCP segments with no flags in<br>the packet header, generating packets that are illegal based on RFC 793. The RFC<br>793 expected behavior is that any TCP segment with an out-of-state Flag sent to<br>an open port is discarded, whereas segments with out-of-state flags sent to<br>closed ports should be handled with a RST in response. This behavior should<br>allow an attacker to scan for closed ports by sending certain types of<br>rule-breaking packets (out of sync or disallowed by the TCB) and detect closed<br>ports via RST packets.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Null Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/304.html",
      "id": "304"
    },
    {
      "Description": "<b>CAPEC-612: WiFi MAC Address Tracking</b><br>In this attack scenario, the attacker passively listens for WiFi messages and<br>logs the associated Media Access Control (MAC) addresses. These addresses are<br>intended to be unique to each wireless device (although they can be configured<br>and changed by software). Once the attacker is able to associate a MAC address<br>with a particular user or set of users (for example, when attending a public<br>event), the attacker can then scan for that MAC address to track that user in<br>the future.",
      "color": "#94ebff",
      "size": 10,
      "label": "WiFi MAC Address Tracking",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/612.html",
      "id": "612"
    },
    {
      "Description": "<b>CAPEC-298: UDP Ping</b><br>An adversary sends a UDP datagram to the remote host to determine if the host is<br>alive. If a UDP datagram is sent to an open UDP port there is very often no<br>response, so a typical strategy for using a UDP ping is to send the datagram to<br>a random high port on the target. The goal is to solicit an 'ICMP port<br>unreachable' message from the target, indicating that the host is alive. UDP<br>pings are useful because some firewalls are not configured to block UDP<br>datagrams sent to strange or typically unused ports, like ports in the 65K<br>range. Additionally, while some firewalls may filter incoming ICMP, weaknesses<br>in firewall rule-sets may allow certain types of ICMP (host unreachable, port<br>unreachable) which are useful for UDP ping attempts.",
      "color": "#94ebff",
      "size": 10,
      "label": "UDP Ping",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/298.html",
      "id": "298"
    },
    {
      "Description": "<b>CAPEC-618: Cellular Broadcast Message Request</b><br>In this attack scenario, the attacker uses knowledge of the target\u2019s mobile<br>phone number (i.e., the number associated with the SIM used in the<br>retransmission device) to cause the cellular network to send broadcast messages<br>to alert the mobile device. Since the network knows which cell tower the<br>target\u2019s mobile device is attached to, the broadcast messages are only sent in<br>the Location Area Code (LAC) where the target is currently located. By<br>triggering the cellular broadcast message and then listening for the presence or<br>absence of that message, an attacker could verify that the target is in (or not<br>in) a given location.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Broadcast Message Request",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/618.html",
      "id": "618"
    },
    {
      "Description": "<b>CAPEC-529: Malware-Directed Internal Reconnaissance</b><br>Adversary uses malware or a similarly controlled application installed inside an<br>organizational perimeter to gather information about the composition,<br>configuration, and security mechanisms of a targeted application, system or<br>network.",
      "color": "#75aaff",
      "size": 18,
      "label": "Malware-Directed Internal Reconnaissance",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/529.html",
      "id": "529"
    },
    {
      "Description": "<b>CAPEC-576: Group Permission Footprinting</b><br>An adversary exploits functionality meant to identify information about user<br>groups and their permissions on the target system to an authorized user. By<br>knowing what users/permissions are registered on the target system, the<br>adversary can inform further and more targeted malicious behavior. An example<br>Windows command which can list local groups is \"net localgroup\".",
      "color": "#75aaff",
      "size": 18,
      "label": "Group Permission Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/576.html",
      "id": "576"
    },
    {
      "Description": "<b>CAPEC-294: ICMP Address Mask Request</b><br>An adversary sends an ICMP Type 17 Address Mask Request to gather information<br>about a target's networking configuration. ICMP Address Mask Requests are<br>defined by RFC-950, \"Internet Standard Subnetting Procedure.\" An Address Mask<br>Request is an ICMP type 17 message that triggers a remote system to respond with<br>a list of its related subnets, as well as its default gateway and broadcast<br>address via an ICMP type 18 Address Mask Reply datagram. Gathering this type of<br>information helps the adversary plan router-based attacks as well as<br>denial-of-service attacks against the broadcast address.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Address Mask Request",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/294.html",
      "id": "294"
    },
    {
      "Description": "<b>CAPEC-291: DNS Zone Transfers</b><br>An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some<br>external DNS servers will return a list of IP address and valid hostnames. Under<br>certain conditions, it may even be possible to obtain Zone data about the<br>organization's internal network. When successful the attacker learns valuable<br>information about the topology of the target organization, including information<br>about particular servers, their role within the IT structure, and possibly<br>information about the operating systems running upon the network. This is<br>configuration dependent behavior so it may also be required to search out<br>multiple DNS servers while attempting to find one with ZONE transfers allowed.",
      "color": "#94ebff",
      "size": 10,
      "label": "DNS Zone Transfers",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/291.html",
      "id": "291"
    },
    {
      "Description": "<b>CAPEC-169: Footprinting</b><br>An adversary engages in probing and exploration activities to identify<br>constituents and properties of the target.",
      "color": "#2176ff",
      "size": 30,
      "label": "Footprinting",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/169.html",
      "id": "169"
    },
    {
      "Description": "<b>CAPEC-307: TCP RPC Scan</b><br>An adversary scans for RPC services listing on a Unix/Linux host.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP RPC Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/307.html",
      "id": "307"
    },
    {
      "Description": "<b>CAPEC-581: Security Software Footprinting</b><br>Adversaries may attempt to get a listing of security tools that are installed on<br>the system and their configurations. This may include security related system<br>features (such as a built-in firewall or anti-spyware) as well as third-party<br>security software.",
      "color": "#94ebff",
      "size": 10,
      "label": "Security Software Footprinting",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/581.html",
      "id": "581"
    },
    {
      "Description": "<b>CAPEC-646: Peripheral Footprinting</b><br>Adversaries may attempt to obtain information about attached peripheral devices<br>and components connected to a computer system. Examples may include discovering<br>the presence of iOS devices by searching for backups, analyzing the Windows<br>registry to determine what USB devices have been connected, or infecting a<br>victim system with malware to report when a USB device has been connected. This<br>may allow the adversary to gain additional insight about the system or network<br>environment, which may be useful in constructing further attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Peripheral Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/646.html",
      "id": "646"
    },
    {
      "Description": "<b>CAPEC-85: AJAX Footprinting</b><br>This attack utilizes the frequent client-server roundtrips in Ajax conversation<br>to scan a system. While Ajax does not open up new vulnerabilities per se, it<br>does optimize them from an attacker point of view. A common first step for an<br>attacker is to footprint the target environment to understand what attacks will<br>work. Since footprinting relies on enumeration, the conversational pattern of<br>rapid, multiple requests and responses that are typical in Ajax applications<br>enable an attacker to look for many vulnerabilities, well-known ports, network<br>locations and so on. The knowledge gained through Ajax fingerprinting can be<br>used to support other attacks, such as XSS.",
      "color": "#94ebff",
      "size": 10,
      "label": "AJAX Footprinting",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/85.html",
      "id": "85"
    },
    {
      "Description": "<b>CAPEC-575: Account Footprinting</b><br>An adversary exploits functionality meant to identify information about the<br>domain accounts and their permissions on the target system to an authorized<br>user. By knowing what accounts are registered on the target system, the<br>adversary can inform further and more targeted malicious behavior. Example<br>Windows commands which can acquire this information are: \"net user\" and<br>\"dsquery\".",
      "color": "#75aaff",
      "size": 18,
      "label": "Account Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/575.html",
      "id": "575"
    },
    {
      "Description": "<b>CAPEC-300: Port Scanning</b><br>An adversary uses a combination of techniques to determine the state of the<br>ports on a remote target. Any service or application available for TCP or UDP<br>networking will have a port open for communications over the network.",
      "color": "#75aaff",
      "size": 18,
      "label": "Port Scanning",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/300.html",
      "id": "300"
    },
    {
      "Description": "<b>CAPEC-297: TCP ACK Ping</b><br>An adversary sends a TCP segment with the ACK flag set to a remote host for the<br>purpose of determining if the host is alive. This is one of several TCP 'ping'<br>types. The RFC 793 expected behavior for a service is to respond with a RST<br>'reset' packet to any unsolicited ACK segment that is not part of an existing<br>connection. So by sending an ACK segment to a port, the adversary can identify<br>that the host is alive by looking for a RST packet. Typically, a remote server<br>will respond with a RST regardless of whether a port is open or closed. In this<br>way, TCP ACK pings cannot discover the state of a remote port because the<br>behavior is the same in either case. The firewall will look up the ACK packet in<br>its state-table and discard the segment because it does not correspond to any<br>active connection. A TCP ACK Ping can be used to discover if a host is alive via<br>RST response packets sent from the host.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP ACK Ping",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/297.html",
      "id": "297"
    },
    {
      "Description": "<b>CAPEC-580: System Footprinting</b><br>An adversary engages in active probing and exploration activities to determine<br>security information about a remote target system. Often times adversaries will<br>rely on remote applications that can be probed for system configurations.",
      "color": "#75aaff",
      "size": 18,
      "label": "System Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/580.html",
      "id": "580"
    },
    {
      "Description": "<b>CAPEC-619: Signal Strength Tracking</b><br>In this attack scenario, the attacker passively monitors the signal strength of<br>the target\u2019s cellular RF signal or WiFi RF signal and uses the strength of the<br>signal (with directional antennas and/or from multiple listening points at once)<br>to identify the source location of the signal. Obtaining the signal of the<br>target can be accomplished through multiple techniques such as through Cellular<br>Broadcast Message Request or through the use of IMSI Tracking or WiFi MAC<br>Address Tracking.",
      "color": "#94ebff",
      "size": 10,
      "label": "Signal Strength Tracking",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/619.html",
      "id": "619"
    },
    {
      "Description": "<b>CAPEC-694: System Location Discovery</b><br>An adversary collects information about the target system in an attempt to<br>identify the system's geographical location. Information gathered could include<br>keyboard layout, system language, and timezone. This information may benefit an<br>adversary in confirming the desired target and/or tailoring further attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "System Location Discovery",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/694.html",
      "id": "694"
    },
    {
      "Description": "<b>CAPEC-149: Explore for Predictable Temporary File Names</b><br>An attacker explores a target to identify the names and locations of predictable<br>temporary files for the purpose of launching further attacks against the target.<br>This involves analyzing naming conventions and storage locations of the<br>temporary files created by a target application. If an attacker can predict the<br>names of temporary files they can use this information to mount other attacks,<br>such as information gathering and symlink attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Explore for Predictable Temporary File Names",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/149.html",
      "id": "149"
    },
    {
      "Description": "<b>CAPEC-290: Enumerate Mail Exchange (MX) Records</b><br>An adversary enumerates the MX records for a given via a DNS query. This type of<br>information gathering returns the names of mail servers on the network. Mail<br>servers are often not exposed to the Internet but are located within the DMZ of<br>a network protected by a firewall. A side effect of this configuration is that<br>enumerating the MX records for an organization my reveal the IP address of the<br>firewall or possibly other internal systems. Attackers often resort to MX record<br>enumeration when a DNS Zone Transfer is not possible.",
      "color": "#94ebff",
      "size": 10,
      "label": "Enumerate Mail Exchange (MX) Records",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/290.html",
      "id": "290"
    },
    {
      "Description": "<b>CAPEC-305: TCP ACK Scan</b><br>An adversary uses TCP ACK segments to gather information about firewall or ACL<br>configuration. The purpose of this type of scan is to discover information about<br>filter configurations rather than port state. This type of scanning is rarely<br>useful alone, but when combined with SYN scanning, gives a more complete picture<br>of the type of firewall rules that are present.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP ACK Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/305.html",
      "id": "305"
    },
    {
      "Description": "<b>CAPEC-497: File Discovery</b><br>An adversary engages in probing and exploration activities to determine if<br>common key files exists. Such files often contain configuration and security<br>parameters of the targeted application, system or network. Using this knowledge<br>may often pave the way for more damaging attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "File Discovery",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/497.html",
      "id": "497"
    },
    {
      "Description": "<b>CAPEC-577: Owner Footprinting</b><br>An adversary exploits functionality meant to identify information about the<br>primary users on the target system to an authorized user. They may do this, for<br>example, by reviewing logins or file modification times. By knowing what owners<br>use the target system, the adversary can inform further and more targeted<br>malicious behavior. An example Windows command that may accomplish this is \"dir<br>/A ntuser.dat\". Which will display the last modified time of a user's ntuser.dat<br>file when run within the root folder of a user. This time is synonymous with the<br>last time that user was logged in.",
      "color": "#75aaff",
      "size": 18,
      "label": "Owner Footprinting",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/577.html",
      "id": "577"
    },
    {
      "Description": "<b>CAPEC-301: TCP Connect Scan</b><br>An adversary uses full TCP connection attempts to determine if a port is open on<br>the target system. The scanning process involves completing a 'three-way<br>handshake' with a remote port, and reports the port as closed if the full<br>handshake cannot be established. An advantage of TCP connect scanning is that it<br>works against any TCP/IP stack.",
      "color": "#94ebff",
      "size": 10,
      "label": "TCP Connect Scan",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/301.html",
      "id": "301"
    },
    {
      "Description": "<b>CAPEC-285: ICMP Echo Request Ping</b><br>An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping',<br>in order to determine if a target system is responsive. If the request is not<br>blocked by a firewall or ACL, the target host will respond with an ICMP Type 0<br>Echo Reply datagram. This type of exchange is usually referred to as a 'Ping'<br>due to the Ping utility present in almost all operating systems. Ping, as<br>commonly implemented, allows a user to test for alive hosts, measure round-trip<br>time, and measure the percentage of packet loss.",
      "color": "#94ebff",
      "size": 10,
      "label": "ICMP Echo Request Ping",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/285.html",
      "id": "285"
    }
  ],
  "links": [
    {
      "source": "573",
      "target": "169"
    },
    {
      "source": "299",
      "target": "292"
    },
    {
      "source": "306",
      "target": "300"
    },
    {
      "source": "643",
      "target": "309"
    },
    {
      "source": "303",
      "target": "300"
    },
    {
      "source": "302",
      "target": "300"
    },
    {
      "source": "293",
      "target": "309"
    },
    {
      "source": "296",
      "target": "292"
    },
    {
      "source": "308",
      "target": "300"
    },
    {
      "source": "309",
      "target": "169"
    },
    {
      "source": "295",
      "target": "292"
    },
    {
      "source": "292",
      "target": "169"
    },
    {
      "source": "574",
      "target": "169"
    },
    {
      "source": "613",
      "target": "292"
    },
    {
      "source": "287",
      "target": "300"
    },
    {
      "source": "304",
      "target": "300"
    },
    {
      "source": "612",
      "target": "292"
    },
    {
      "source": "298",
      "target": "292"
    },
    {
      "source": "618",
      "target": "292"
    },
    {
      "source": "529",
      "target": "169"
    },
    {
      "source": "576",
      "target": "169"
    },
    {
      "source": "294",
      "target": "292"
    },
    {
      "source": "291",
      "target": "309"
    },
    {
      "source": "307",
      "target": "300"
    },
    {
      "source": "581",
      "target": "580"
    },
    {
      "source": "646",
      "target": "169"
    },
    {
      "source": "85",
      "target": "580"
    },
    {
      "source": "575",
      "target": "169"
    },
    {
      "source": "300",
      "target": "169"
    },
    {
      "source": "297",
      "target": "292"
    },
    {
      "source": "580",
      "target": "169"
    },
    {
      "source": "619",
      "target": "292"
    },
    {
      "source": "694",
      "target": "169"
    },
    {
      "source": "149",
      "target": "497"
    },
    {
      "source": "290",
      "target": "309"
    },
    {
      "source": "305",
      "target": "300"
    },
    {
      "source": "497",
      "target": "169"
    },
    {
      "source": "577",
      "target": "169"
    },
    {
      "source": "301",
      "target": "300"
    },
    {
      "source": "285",
      "target": "292"
    }
  ]
}
{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "Description": "<b>CAPEC-501: Android Activity Hijack</b><br>An adversary intercepts an implicit intent sent to launch a Android-based<br>trusted activity and instead launches a counterfeit activity in its place. The<br>malicious activity is then used to mimic the trusted activity's user interface<br>and prompt the target to enter sensitive data as if they were interacting with<br>the trusted activity.",
      "color": "#94ebff",
      "size": 10,
      "label": "Android Activity Hijack",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/501.html",
      "id": "501"
    },
    {
      "Description": "<b>CAPEC-546: Incomplete Data Deletion in a Multi-Tenant Environment</b><br>An adversary obtains unauthorized information due to insecure or incomplete data<br>deletion in a multi-tenant environment. If a cloud provider fails to completely<br>delete storage and data from former cloud tenants' systems/resources, once these<br>resources are allocated to new, potentially malicious tenants, the latter can<br>probe the provided resources for sensitive information still there.",
      "color": "#94ebff",
      "size": 10,
      "label": "Incomplete Data Deletion in a Multi-Tenant Environment",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/546.html",
      "id": "546"
    },
    {
      "Description": "<b>CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</b><br>This attack relies on the use of HTTP Cookies to store credentials, state<br>information and other critical data on client systems. There are several<br>different forms of this attack. The first form of this attack involves accessing<br>HTTP Cookies to mine for potentially sensitive data contained therein. The<br>second form involves intercepting this data as it is transmitted from client to<br>server. This intercepted information is then used by the adversary to<br>impersonate the remote user/session. The third form is when the cookie's content<br>is modified by the adversary before it is sent back to the server. Here the<br>adversary seeks to convince the target server to operate on this falsified<br>information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Accessing/Intercepting/Modifying HTTP Cookies",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/31.html",
      "id": "31"
    },
    {
      "Description": "<b>CAPEC-637: Collect Data from Clipboard</b><br>The adversary exploits an application that allows for the copying of sensitive<br>data or information by collecting information copied to the clipboard. Data<br>copied to the clipboard can be accessed by other applications, such as malware<br>built to exfiltrate or log clipboard contents on a periodic basis. In this way,<br>the adversary aims to garner information to which they are unauthorized.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Clipboard",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/637.html",
      "id": "637"
    },
    {
      "Description": "<b>CAPEC-261: Fuzzing for garnering other adjacent user/sensitive data</b><br>An adversary who is authorized to send queries to a target sends variants of<br>expected queries in the hope that these modified queries might return<br>information (directly or indirectly through error logs) beyond what the expected<br>set of queries should provide.",
      "color": "#94ebff",
      "size": 10,
      "label": "Fuzzing for garnering other adjacent user/sensitive data",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/261.html",
      "id": "261"
    },
    {
      "Description": "<b>CAPEC-28: Fuzzing</b><br>In this attack pattern, the adversary leverages fuzzing to try to identify<br>weaknesses in the system. Fuzzing is a software security and functionality<br>testing method that feeds randomly constructed input to the system and looks for<br>an indication that a failure in response to that input has occurred. Fuzzing<br>treats the system as a black box and is totally free from any preconceptions or<br>assumptions about the system. Fuzzing can help an attacker discover certain<br>assumptions made about user input in the system. Fuzzing gives an attacker a<br>quick way of potentially uncovering some of these assumptions despite not<br>necessarily knowing anything about the internals of the system. These<br>assumptions can then be turned against the system by specially crafting user<br>input that may allow an attacker to achieve their goals.",
      "color": "#2176ff",
      "size": 30,
      "label": "Fuzzing",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/28.html",
      "id": "28"
    },
    {
      "Description": "<b>CAPEC-508: Shoulder Surfing</b><br>In a shoulder surfing attack, an adversary observes an unaware individual's<br>keystrokes, screen content, or conversations with the goal of obtaining<br>sensitive information. One motive for this attack is to obtain sensitive<br>information about the target for financial, personal, political, or other gains.<br>From an insider threat perspective, an additional motive could be to obtain<br>system/application credentials or cryptographic keys. Shoulder surfing attacks<br>are accomplished by observing the content \"over the victim's shoulder\", as<br>implied by the name of this attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Shoulder Surfing",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/508.html",
      "id": "508"
    },
    {
      "Description": "<b>CAPEC-208: Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements</b><br>An attacker removes or modifies the logic on a client associated with monetary<br>calculations resulting in incorrect information being sent to the server. A<br>server may rely on a client to correctly compute monetary information. For<br>example, a server might supply a price for an item and then rely on the client<br>to correctly compute the total cost of a purchase given the number of items the<br>user is buying. If the attacker can remove or modify the logic that controls<br>these calculations, they can return incorrect values to the server. The attacker<br>can use this to make purchases for a fraction of the legitimate cost or<br>otherwise avoid correct billing for activities.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removing/short-circuiting 'Purse' logic: removing/mutating 'cash' decrements",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/208.html",
      "id": "208"
    },
    {
      "Description": "<b>CAPEC-127: Directory Indexing</b><br>An adversary crafts a request to a target that results in the target<br>listing/indexing the content of a directory as output. One common method of<br>triggering directory contents as output is to construct a request containing a<br>path that terminates in a directory name rather than a file name since many<br>applications are configured to provide a list of the directory's contents when<br>such a request is received. An adversary can use this to explore the directory<br>tree on a target as well as learn the names of files. This can often end up<br>revealing test files, backup files, temporary files, hidden files, configuration<br>files, user accounts, script contents, as well as naming conventions, all of<br>which can be used by an attacker to mount additional attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Directory Indexing",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/127.html",
      "id": "127"
    },
    {
      "Description": "<b>CAPEC-95: WSDL Scanning</b><br>This attack targets the WSDL interface made available by a web service. The<br>attacker may scan the WSDL interface to reveal sensitive information about<br>invocation patterns, underlying technology implementations and associated<br>vulnerabilities. This type of probing is carried out to perform more serious<br>attacks (e.g. parameter tampering, malicious content injection, command<br>injection, etc.). WSDL files provide detailed information about the services<br>ports and bindings available to consumers. For instance, the attacker can submit<br>special characters or malicious content to the Web service and can cause a<br>denial of service condition or illegal access to database records. In addition,<br>the attacker may try to guess other private methods by using the information<br>provided in the WSDL files.",
      "color": "#94ebff",
      "size": 10,
      "label": "WSDL Scanning",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/95.html",
      "id": "95"
    },
    {
      "Description": "<b>CAPEC-158: Sniffing Network Traffic</b><br>In this attack pattern, the adversary monitors network traffic between nodes of<br>a public or multicast network in an attempt to capture sensitive information at<br>the protocol level. Network sniffing applications can reveal TCP/IP, DNS,<br>Ethernet, and other low-level network communication information. The adversary<br>takes a passive role in this attack pattern and simply observes and analyzes the<br>traffic. The adversary may precipitate or indirectly influence the content of<br>the observed transaction, but is never the intended recipient of the target<br>information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Sniffing Network Traffic",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/158.html",
      "id": "158"
    },
    {
      "Description": "<b>CAPEC-207: Removing Important Client Functionality</b><br>An adversary removes or disables functionality on the client that the server<br>assumes to be present and trustworthy.",
      "color": "#75aaff",
      "size": 18,
      "label": "Removing Important Client Functionality",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/207.html",
      "id": "207"
    },
    {
      "Description": "<b>CAPEC-648: Collect Data from Screen Capture</b><br>An adversary gathers sensitive information by exploiting the system's screen<br>capture functionality. Through screenshots, the adversary aims to see what<br>happens on the screen over the course of an operation. The adversary can<br>leverage information gathered in order to carry out further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Screen Capture",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/648.html",
      "id": "648"
    },
    {
      "Description": "<b>CAPEC-144: Detect Unpublicized Web Services</b><br>An adversary searches a targeted web site for web services that have not been<br>publicized. This attack can be especially dangerous since unpublished but<br>available services may not have adequate security controls placed upon them<br>given that an administrator may believe they are unreachable.",
      "color": "#94ebff",
      "size": 10,
      "label": "Detect Unpublicized Web Services",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/144.html",
      "id": "144"
    },
    {
      "Description": "<b>CAPEC-39: Manipulating Opaque Client-based Data Tokens</b><br>In circumstances where an application holds important data client-side in tokens<br>(cookies, URLs, data files, and so forth) that data can be manipulated. If<br>client or server-side application components reinterpret that data as<br>authentication tokens or data (such as store item pricing or wallet information)<br>then even opaquely manipulating that data may bear fruit for an Attacker. In<br>this pattern an attacker undermines the assumption that client side tokens have<br>been adequately protected from tampering through use of encryption or<br>obfuscation.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating Opaque Client-based Data Tokens",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/39.html",
      "id": "39"
    },
    {
      "Description": "<b>CAPEC-639: Probe System Files</b><br>An adversary obtains unauthorized information due to improperly protected files.<br>If an application stores sensitive information in a file that is not protected<br>by proper access control, then an adversary can access the file and search for<br>sensitive information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe System Files",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/639.html",
      "id": "639"
    },
    {
      "Description": "<b>CAPEC-173: Action Spoofing</b><br>An adversary is able to disguise one action for another and therefore trick a<br>user into initiating one type of action when they intend to initiate a different<br>action. For example, a user might be led to believe that clicking a button will<br>submit a query, but in fact it downloads software. Adversaries may perform this<br>attack through social means, such as by simply convincing a victim to perform<br>the action or relying on a user's natural inclination to do so, or through<br>technical means, such as a clickjacking attack where a user sees one interface<br>but is actually interacting with a second, invisible, interface.",
      "color": "#2176ff",
      "size": 30,
      "label": "Action Spoofing",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/173.html",
      "id": "173"
    },
    {
      "Description": "<b>CAPEC-462: Cross-Domain Search Timing</b><br>An attacker initiates cross domain HTTP / GET requests and times the server<br>responses. The timing of these responses may leak important information on what<br>is happening on the server. Browser's same origin policy prevents the attacker<br>from directly reading the server responses (in the absence of any other<br>weaknesses), but does not prevent the attacker from timing the responses to<br>requests that the attacker issued cross domain.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross-Domain Search Timing",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/462.html",
      "id": "462"
    },
    {
      "Description": "<b>CAPEC-545: Pull Data from System Resources</b><br>An adversary who is authorized or has the ability to search known system<br>resources, does so with the intention of gathering useful information. System<br>resources include files, memory, and other aspects of the target system. In this<br>pattern of attack, the adversary does not necessarily know what they are going<br>to find when they start pulling data. This is different than CAPEC-150 where the<br>adversary knows what they are looking for due to the common location.",
      "color": "#75aaff",
      "size": 18,
      "label": "Pull Data from System Resources",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/545.html",
      "id": "545"
    },
    {
      "Description": "<b>CAPEC-699: Eavesdropping on a Monitor</b><br>An Adversary can eavesdrop on the content of an external monitor through the air<br>without modifying any cable or installing software, just capturing this signal<br>emitted by the cable or video port, with this the attacker will be able to<br>impact the confidentiality of the data without being detected by traditional<br>security tools",
      "color": "#2176ff",
      "size": 30,
      "label": "Eavesdropping on a Monitor",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/699.html",
      "id": "699"
    },
    {
      "Description": "<b>CAPEC-150: Collect Data from Common Resource Locations</b><br>An adversary exploits well-known locations for resources for the purposes of<br>undermining the security of the target. In many, if not most systems, files and<br>resources are organized in a default tree structure. This can be useful for<br>adversaries because they often know where to look for resources or files that<br>are necessary for attacks. Even when the precise location of a targeted resource<br>may not be known, naming conventions may indicate a small area of the target<br>machine's file tree where the resources are typically located. For example,<br>configuration files are normally stored in the /etc director on Unix systems.<br>Adversaries can take advantage of this to commit other types of attacks.",
      "color": "#75aaff",
      "size": 18,
      "label": "Collect Data from Common Resource Locations",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/150.html",
      "id": "150"
    },
    {
      "Description": "<b>CAPEC-222: iFrame Overlay</b><br>In an iFrame overlay attack the victim is tricked into unknowingly initiating<br>some action in one system while interacting with the UI from seemingly<br>completely different system.",
      "color": "#94ebff",
      "size": 10,
      "label": "iFrame Overlay",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/222.html",
      "id": "222"
    },
    {
      "Description": "<b>CAPEC-587: Cross Frame Scripting (XFS)</b><br>This attack pattern combines malicious Javascript and a legitimate webpage<br>loaded into a concealed iframe. The malicious Javascript is then able to<br>interact with a legitimate webpage in a manner that is unknown to the user. This<br>attack usually leverages some element of social engineering in that an attacker<br>must convinces a user to visit a web page that the attacker controls.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cross Frame Scripting (XFS)",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/587.html",
      "id": "587"
    },
    {
      "Description": "<b>CAPEC-22: Exploiting Trust in Client</b><br>An attack of this type exploits vulnerabilities in client/server communication<br>channel authentication and data integrity. It leverages the implicit trust a<br>server places in the client, or more importantly, that which the server believes<br>is the client. An attacker executes this type of attack by communicating<br>directly with the server where the server believes it is communicating only with<br>a valid client. There are numerous variations of this type of attack.",
      "color": "#2176ff",
      "size": 30,
      "label": "Exploiting Trust in Client",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/22.html",
      "id": "22"
    },
    {
      "Description": "<b>CAPEC-506: Tapjacking</b><br>An adversary, through a previously installed malicious application, displays an<br>interface that misleads the user and convinces them to tap on an attacker<br>desired location on the screen. This is often accomplished by overlaying one<br>screen on top of another while giving the appearance of a single interface.<br>There are two main techniques used to accomplish this. The first is to leverage<br>transparent properties that allow taps on the screen to pass through the visible<br>application to an application running in the background. The second is to<br>strategically place a small object (e.g., a button or text field) on top of the<br>visible screen and make it appear to be a part of the underlying application. In<br>both cases, the user is convinced to tap on the screen but does not realize the<br>application that they are interacting with.",
      "color": "#75aaff",
      "size": 18,
      "label": "Tapjacking",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/506.html",
      "id": "506"
    },
    {
      "Description": "<b>CAPEC-200: Removal of filters: Input filters, output filters, data masking</b><br>An attacker removes or disables filtering mechanisms on the target application.<br>Input filters prevent invalid data from being sent to an application (for<br>example, overly large inputs that might cause a buffer overflow or other<br>malformed inputs that may not be correctly handled by an application). Input<br>filters might also be designed to constrained executable content.",
      "color": "#94ebff",
      "size": 10,
      "label": "Removal of filters: Input filters, output filters, data masking",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/200.html",
      "id": "200"
    },
    {
      "Description": "<b>CAPEC-215: Fuzzing for application mapping</b><br>An attacker sends random, malformed, or otherwise unexpected messages to a<br>target application and observes the application's log or error messages<br>returned. The attacker does not initially know how a target will respond to<br>individual messages but by attempting a large number of message variants they<br>may find a variant that trigger's desired behavior. In this attack, the purpose<br>of the fuzzing is to observe the application's log and error messages, although<br>fuzzing a target can also sometimes cause the target to enter an unstable state,<br>causing a crash.",
      "color": "#94ebff",
      "size": 10,
      "label": "Fuzzing for application mapping",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/215.html",
      "id": "215"
    },
    {
      "Description": "<b>CAPEC-654: Credential Prompt Impersonation</b><br>An adversary, through a previously installed malicious application, impersonates<br>a credential prompt in an attempt to steal a user's credentials.",
      "color": "#94ebff",
      "size": 10,
      "label": "Credential Prompt Impersonation",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/654.html",
      "id": "654"
    },
    {
      "Description": "<b>CAPEC-181: Flash File Overlay</b><br>An attacker creates a transparent overlay using flash in order to intercept user<br>actions for the purpose of performing a clickjacking attack. In this technique,<br>the Flash file provides a transparent overlay over HTML content. Because the<br>Flash application is on top of the content, user actions, such as clicks, are<br>caught by the Flash application rather than the underlying HTML. The action is<br>then interpreted by the overlay to perform the actions the attacker wishes.",
      "color": "#94ebff",
      "size": 10,
      "label": "Flash File Overlay",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/181.html",
      "id": "181"
    },
    {
      "Description": "<b>CAPEC-609: Cellular Traffic Intercept</b><br>Cellular traffic for voice and data from mobile devices and retransmission<br>devices can be intercepted via numerous methods. Malicious actors can deploy<br>their own cellular tower equipment and intercept cellular traffic<br>surreptitiously. Additionally, government agencies of adversaries and malicious<br>actors can intercept cellular traffic via the telecommunications backbone over<br>which mobile traffic is transmitted.",
      "color": "#94ebff",
      "size": 10,
      "label": "Cellular Traffic Intercept",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/609.html",
      "id": "609"
    },
    {
      "Description": "<b>CAPEC-116: Excavation</b><br>An adversary actively probes the target in a manner that is designed to solicit<br>information that could be leveraged for malicious purposes.",
      "color": "#2176ff",
      "size": 30,
      "label": "Excavation",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/116.html",
      "id": "116"
    },
    {
      "Description": "<b>CAPEC-155: Screen Temporary Files for Sensitive Information</b><br>An adversary exploits the temporary, insecure storage of information by<br>monitoring the content of files used to store temp data during an application's<br>routine execution flow. Many applications use temporary files to accelerate<br>processing or to provide records of state across multiple executions of the<br>application. Sometimes, however, these temporary files may end up storing<br>sensitive information. By screening an application's temporary files, an<br>adversary might be able to discover such sensitive information. For example, web<br>browsers often cache content to accelerate subsequent lookups. If the content<br>contains sensitive information then the adversary could recover this from the<br>web cache.",
      "color": "#94ebff",
      "size": 10,
      "label": "Screen Temporary Files for Sensitive Information",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/155.html",
      "id": "155"
    },
    {
      "Description": "<b>CAPEC-498: Probe iOS Screenshots</b><br>An adversary examines screenshot images created by iOS in an attempt to obtain<br>sensitive information. This attack targets temporary screenshots created by the<br>underlying OS while the application remains open in the background.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe iOS Screenshots",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/498.html",
      "id": "498"
    },
    {
      "Description": "<b>CAPEC-77: Manipulating User-Controlled Variables</b><br>This attack targets user controlled variables (DEBUG=1, PHP Globals, and So<br>Forth). An adversary can override variables leveraging user-supplied, untrusted<br>query variables directly used on the application server without any data<br>sanitization. In extreme cases, the adversary can change variables controlling<br>the business logic of the application. For instance, in languages like PHP, a<br>number of poorly set default configurations may allow the user to override<br>variables.",
      "color": "#75aaff",
      "size": 18,
      "label": "Manipulating User-Controlled Variables",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/77.html",
      "id": "77"
    },
    {
      "Description": "<b>CAPEC-54: Query System for Information</b><br>An adversary, aware of an application's location (and possibly authorized to use<br>the application), probes an application's structure and evaluates its robustness<br>by submitting requests and examining responses. Often, this is accomplished by<br>sending variants of expected queries in the hope that these modified queries<br>might return information beyond what the expected set of queries would provide.",
      "color": "#75aaff",
      "size": 18,
      "label": "Query System for Information",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/54.html",
      "id": "54"
    },
    {
      "Description": "<b>CAPEC-103: Clickjacking</b><br>An adversary tricks a victim into unknowingly initiating some action in one<br>system while interacting with the UI from a seemingly completely different,<br>usually an adversary controlled or intended, system.",
      "color": "#75aaff",
      "size": 18,
      "label": "Clickjacking",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/103.html",
      "id": "103"
    },
    {
      "Description": "<b>CAPEC-406: Dumpster Diving</b><br>An adversary cases an establishment and searches through trash bins, dumpsters,<br>or areas where company information may have been accidentally discarded for<br>information items which may be useful to the dumpster diver. The devastating<br>nature of the items and/or information found can be anything from medical<br>records, resumes, personal photos and emails, bank statements, account details<br>or information about software, tech support logs and so much more, including<br>hardware devices. By collecting this information an adversary may be able to<br>learn important facts about the person or organization that play a role in<br>helping the adversary in their attack.",
      "color": "#94ebff",
      "size": 10,
      "label": "Dumpster Diving",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/406.html",
      "id": "406"
    },
    {
      "Description": "<b>CAPEC-499: Android Intent Intercept</b><br>An adversary, through a previously installed malicious application, intercepts<br>messages from a trusted Android-based application in an attempt to achieve a<br>variety of different objectives including denial of service, information<br>disclosure, and data injection. An implicit intent sent from a trusted<br>application can be received by any application that has declared an appropriate<br>intent filter. If the intent is not protected by a permission that the malicious<br>application lacks, then the attacker can gain access to the data contained<br>within the intent. Further, the intent can be either blocked from reaching the<br>intended destination, or modified and potentially forwarded along.",
      "color": "#75aaff",
      "size": 18,
      "label": "Android Intent Intercept",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/499.html",
      "id": "499"
    },
    {
      "Description": "<b>CAPEC-569: Collect Data as Provided by Users</b><br>An attacker leverages a tool, device, or program to obtain specific information<br>as provided by a user of the target system. This information is often needed by<br>the attacker to launch a follow-on attack. This attack is different than Social<br>Engineering as the adversary is not tricking or deceiving the user. Instead the<br>adversary is putting a mechanism in place that captures the information that a<br>user legitimately enters into a system. Deploying a keylogger, performing a UAC<br>prompt, or wrapping the Windows default credential provider are all examples of<br>such interactions.",
      "color": "#75aaff",
      "size": 18,
      "label": "Collect Data as Provided by Users",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/569.html",
      "id": "569"
    },
    {
      "Description": "<b>CAPEC-65: Sniff Application Code</b><br>An adversary passively sniffs network communications and captures application<br>code bound for an authorized client. Once obtained, they can use it as-is, or<br>through reverse-engineering glean sensitive information or exploit the trust<br>relationship between the client and server. Such code may belong to a dynamic<br>update to the client, a patch being applied to a client component or any such<br>interaction where the client is authorized to communicate with the server.",
      "color": "#94ebff",
      "size": 10,
      "label": "Sniff Application Code",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/65.html",
      "id": "65"
    },
    {
      "Description": "<b>CAPEC-157: Sniffing Attacks</b><br>In this attack pattern, the adversary intercepts information transmitted between<br>two third parties. The adversary must be able to observe, read, and/or hear the<br>communication traffic, but not necessarily block the communication or change its<br>content. Any transmission medium can theoretically be sniffed if the adversary<br>can examine the contents between the sender and recipient. Sniffing Attacks are<br>similar to Adversary-In-The-Middle attacks (CAPEC-94), but are entirely passive.<br>AiTM attacks are predominantly active and often alter the content of the<br>communications themselves.",
      "color": "#75aaff",
      "size": 18,
      "label": "Sniffing Attacks",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/157.html",
      "id": "157"
    },
    {
      "Description": "<b>CAPEC-143: Detect Unpublicized Web Pages</b><br>An adversary searches a targeted web site for web pages that have not been<br>publicized. In doing this, the adversary may be able to gain access to<br>information that the targeted site did not intend to make public.",
      "color": "#94ebff",
      "size": 10,
      "label": "Detect Unpublicized Web Pages",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/143.html",
      "id": "143"
    },
    {
      "Description": "<b>CAPEC-568: Capture Credentials via Keylogger</b><br>An adversary deploys a keylogger in an effort to obtain credentials directly<br>from a system's user. After capturing all the keystrokes made by a user, the<br>adversary can analyze the data and determine which string are likely to be<br>passwords or other credential related information.",
      "color": "#94ebff",
      "size": 10,
      "label": "Capture Credentials via Keylogger",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/568.html",
      "id": "568"
    },
    {
      "Description": "<b>CAPEC-651: Eavesdropping</b><br>An adversary intercepts a form of communication (e.g. text, audio, video) by way<br>of software (e.g., microphone and audio recording application), hardware (e.g.,<br>recording equipment), or physical means (e.g., physical proximity). The goal of<br>eavesdropping is typically to gain unauthorized access to sensitive information<br>about the target for financial, personal, political, or other gains.<br>Eavesdropping is different from a sniffing attack as it does not take place on a<br>network-based communication channel (e.g., IP traffic). Instead, it entails<br>listening in on the raw audio source of a conversation between two or more<br>parties.",
      "color": "#75aaff",
      "size": 18,
      "label": "Eavesdropping",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/651.html",
      "id": "651"
    },
    {
      "Description": "<b>CAPEC-634: Probe Audio and Video Peripherals</b><br>The adversary exploits the target system's audio and video functionalities<br>through malware or scheduled tasks. The goal is to capture sensitive information<br>about the target for financial, personal, political, or other gains which is<br>accomplished by collecting communication data between two parties via the use of<br>peripheral devices (e.g. microphones and webcams) or applications with audio and<br>video capabilities (e.g. Skype) on a system.",
      "color": "#94ebff",
      "size": 10,
      "label": "Probe Audio and Video Peripherals",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/634.html",
      "id": "634"
    },
    {
      "Description": "<b>CAPEC-504: Task Impersonation</b><br>An adversary, through a previously installed malicious application, impersonates<br>an expected or routine task in an attempt to steal sensitive information or<br>leverage a user's privileges.",
      "color": "#75aaff",
      "size": 18,
      "label": "Task Impersonation",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/504.html",
      "id": "504"
    },
    {
      "Description": "<b>CAPEC-117: Interception</b><br>An adversary monitors data streams to or from the target for information<br>gathering purposes. This attack may be undertaken to solely gather sensitive<br>information or to support a further attack against the target. This attack<br>pattern can involve sniffing network traffic as well as other types of data<br>streams (e.g. radio). The adversary can attempt to initiate the establishment of<br>a data stream or passively observe the communications as they unfold. In all<br>variants of this attack, the adversary is not the intended recipient of the data<br>stream. In contrast to other means of gathering information (e.g., targeting<br>data leaks), the adversary must actively position themself so as to observe<br>explicit data channels (e.g. network traffic) and read the content. However,<br>this attack differs from a Adversary-In-the-Middle (CAPEC-94) attack, as the<br>adversary does not alter the content of the communications nor forward data to<br>the intended recipient.",
      "color": "#2176ff",
      "size": 30,
      "label": "Interception",
      "label_class": "node-label-big",
      "url": "https://capec.mitre.org/data/definitions/117.html",
      "id": "117"
    },
    {
      "Description": "<b>CAPEC-647: Collect Data from Registries</b><br>An adversary exploits a weakness in authorization to gather system-specific data<br>and sensitive information within a registry (e.g., Windows Registry, Mac plist).<br>These contain information about the system configuration, software, operating<br>system, and security. The adversary can leverage information gathered in order<br>to carry out further attacks.",
      "color": "#94ebff",
      "size": 10,
      "label": "Collect Data from Registries",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/647.html",
      "id": "647"
    },
    {
      "Description": "<b>CAPEC-202: Create Malicious Client</b><br>An adversary creates a client application to interface with a target service<br>where the client violates assumptions the service makes about clients. Services<br>that have designated client applications (as opposed to services that use<br>general client applications, such as IMAP or POP mail servers which can interact<br>with any IMAP or POP client) may assume that the client will follow specific<br>procedures.",
      "color": "#75aaff",
      "size": 18,
      "label": "Create Malicious Client",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/202.html",
      "id": "202"
    },
    {
      "Description": "<b>CAPEC-57: Utilizing REST's Trust in the System Resource to Obtain Sensitive Data</b><br>This attack utilizes a REST(REpresentational State Transfer)-style applications'<br>trust in the system resources and environment to obtain sensitive data once SSL<br>is terminated.",
      "color": "#94ebff",
      "size": 10,
      "label": "Utilizing REST's Trust in the System Resource to Obtain Sensitive Data",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/57.html",
      "id": "57"
    },
    {
      "Description": "<b>CAPEC-675: Retrieve Data from Decommissioned Devices</b><br>An adversary obtains decommissioned, recycled, or discarded systems and devices<br>that can include an organization\u2019s intellectual property, employee data, and<br>other types of controlled information. Systems and devices that have reached the<br>end of their lifecycles may be subject to recycle or disposal where they can be<br>exposed to adversarial attempts to retrieve information from internal memory<br>chips and storage devices that are part of the system.",
      "color": "#75aaff",
      "size": 18,
      "label": "Retrieve Data from Decommissioned Devices",
      "label_class": "node-label-medium",
      "url": "https://capec.mitre.org/data/definitions/675.html",
      "id": "675"
    },
    {
      "Description": "<b>CAPEC-162: Manipulating Hidden Fields</b><br>An adversary exploits a weakness in the server's trust of client-side processing<br>by modifying data on the client-side, such as price information, and then<br>submitting this data to the server, which processes the modified data. For<br>example, eShoplifting is a data manipulation attack against an on-line merchant<br>during a purchasing transaction. The manipulation of price, discount or quantity<br>fields in the transaction message allows the adversary to acquire items at a<br>lower cost than the merchant intended. The adversary performs a normal<br>purchasing transaction but edits hidden fields within the HTML form response<br>that store price or other information to give themselves a better deal. The<br>merchant then uses the modified pricing information in calculating the cost of<br>the selected items.",
      "color": "#94ebff",
      "size": 10,
      "label": "Manipulating Hidden Fields",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/162.html",
      "id": "162"
    },
    {
      "Description": "<b>CAPEC-13: Subverting Environment Variable Values</b><br>The adversary directly or indirectly modifies environment variables used by or<br>controlling the target software. The adversary's goal is to cause the target<br>software to deviate from its expected operation in a manner that benefits the<br>adversary.",
      "color": "#94ebff",
      "size": 10,
      "label": "Subverting Environment Variable Values",
      "label_class": "node-label-small",
      "url": "https://capec.mitre.org/data/definitions/13.html",
      "id": "13"
    }
  ],
  "links": [
    {
      "source": "501",
      "target": "499"
    },
    {
      "source": "501",
      "target": "173"
    },
    {
      "source": "546",
      "target": "545"
    },
    {
      "source": "31",
      "target": "39"
    },
    {
      "source": "31",
      "target": "157"
    },
    {
      "source": "637",
      "target": "150"
    },
    {
      "source": "261",
      "target": "54"
    },
    {
      "source": "508",
      "target": "651"
    },
    {
      "source": "208",
      "target": "207"
    },
    {
      "source": "127",
      "target": "54"
    },
    {
      "source": "95",
      "target": "54"
    },
    {
      "source": "158",
      "target": "157"
    },
    {
      "source": "207",
      "target": "22"
    },
    {
      "source": "648",
      "target": "150"
    },
    {
      "source": "144",
      "target": "150"
    },
    {
      "source": "39",
      "target": "22"
    },
    {
      "source": "639",
      "target": "545"
    },
    {
      "source": "462",
      "target": "54"
    },
    {
      "source": "545",
      "target": "116"
    },
    {
      "source": "699",
      "target": "651"
    },
    {
      "source": "150",
      "target": "116"
    },
    {
      "source": "222",
      "target": "103"
    },
    {
      "source": "587",
      "target": "103"
    },
    {
      "source": "506",
      "target": "173"
    },
    {
      "source": "200",
      "target": "207"
    },
    {
      "source": "215",
      "target": "54"
    },
    {
      "source": "215",
      "target": "28"
    },
    {
      "source": "654",
      "target": "504"
    },
    {
      "source": "181",
      "target": "103"
    },
    {
      "source": "609",
      "target": "157"
    },
    {
      "source": "155",
      "target": "150"
    },
    {
      "source": "498",
      "target": "545"
    },
    {
      "source": "77",
      "target": "22"
    },
    {
      "source": "54",
      "target": "116"
    },
    {
      "source": "103",
      "target": "173"
    },
    {
      "source": "406",
      "target": "150"
    },
    {
      "source": "499",
      "target": "117"
    },
    {
      "source": "569",
      "target": "116"
    },
    {
      "source": "65",
      "target": "157"
    },
    {
      "source": "157",
      "target": "117"
    },
    {
      "source": "143",
      "target": "150"
    },
    {
      "source": "568",
      "target": "569"
    },
    {
      "source": "651",
      "target": "117"
    },
    {
      "source": "634",
      "target": "651"
    },
    {
      "source": "634",
      "target": "545"
    },
    {
      "source": "504",
      "target": "173"
    },
    {
      "source": "647",
      "target": "150"
    },
    {
      "source": "202",
      "target": "22"
    },
    {
      "source": "57",
      "target": "157"
    },
    {
      "source": "675",
      "target": "116"
    },
    {
      "source": "162",
      "target": "77"
    },
    {
      "source": "13",
      "target": "77"
    }
  ]
}